Twoim zadaniem jest stwierdzić czy wynik równania otrzymanego na wejściu jest parzysty. Równanie może składać się z liczb z zakresu od 0 do 109 oraz operatorów +, -, *, = pooddzielanych od siebie pojedynczymi spacjami, przy czym znak równości występuje dokładnie raz na samym końcu równania. Należy założyć, że równanie zawsze będzie poprawne.

Wejście
W pierwszej linii wejścia znajduje się liczba n (1 ≤ n ≤ 1000) określające liczbę zestawów danych. W każdej z kolejnych n linii znajduje się jedno równanie zakończone znakiem "=". Ilość liczb w równaniu nie przekracza 500.

Wyjście
Dla każdego zestawu danych (równania) wypisz w oddzielnej linii słowo "TAK" jeżeli jego wynik jest parzysty lub słowo "NIE" jeżeli jest inaczej.

Przykład
Wejście:

3
7 + 8 * 3 + 9 - 1 =
4 * 5 - 9 - 1 =
7 * 8 - 10 * 10 =
Wyjście:

NIE
TAK
TAK

########

#include <iostream>
#include <string>
#include <deque>
#include <sstream>
using namespace std;
 
int main()
{
string sN;
getline(cin,sN);
int N=stoi(sN);
for (int i=0; i<N; i++){
string str;
getline(cin,str);
stringstream ss(str);
string invStr;
deque<string>sDeq;
deque<int>iDeq;
int count=0;
bool multiple=false;
while(getline(ss,invStr,' ')){ //dodawanie do 2 vecktorow + mnożenie od razu
  if (invStr=="*") multiple=true;
   
else{
 if (count%2==1) sDeq.push_back(invStr);
 else {
  if (multiple==true) {
    iDeq.back()*=stoi(invStr); 
    multiple=false;
  }
  else iDeq.push_back(stoi(invStr));   
 }  

}
 count++;
}

int result=iDeq[0];
for (int i=0; i<sDeq.size(); i++){ //potem reszta
    if (sDeq[i]=="+") {
    result+=iDeq[i+1];
    }
    else if (sDeq[i]=="-") {
    result-=iDeq[i+1];
    }
    else break;
}
 if (result%2==0) cout<<"TAK"<<endl;
 else cout<<"NIE"<<endl; 
} 
return 0;
}

